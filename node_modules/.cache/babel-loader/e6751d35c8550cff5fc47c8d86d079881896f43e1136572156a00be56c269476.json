{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Marica\\\\Pictures\\\\galerija\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Checkout = ({\n  selectedImages,\n  name\n}) => {\n  _s();\n  const navigate = useNavigate();\n  const total = selectedImages.length * 2;\n  const handlePayment = (paymentMethod, orderID = null) => {\n    if (!selectedImages.length) {\n      alert(\"Molimo vas da odaberete slike pre nego što nastavite.\");\n      return;\n    }\n    const orderData = {\n      name,\n      selectedImages,\n      paymentMethod,\n      orderID\n    };\n    console.log(\"Slanje porudžbine:\", orderData); // Log 1: Podaci pre slanja\n\n    // Sačuvaj u localStorage za Confirmation stranicu\n    localStorage.setItem(\"orderData\", JSON.stringify(orderData));\n\n    // Pošalji porudžbinu na server\n    fetch(\"http://localhost:3001/api/order\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(orderData)\n    }).then(response => {\n      console.log(\"Odgovor od /api/order:\", response); // Log 2: Provera odgovora\n      return response.json();\n    }).then(data => {\n      console.log(\"Porudžbina poslata:\", data);\n\n      // Pokreni štampu\n      fetch(\"http://localhost:3001/api/print\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(orderData)\n      }).then(response => response.json()).then(data => {\n        console.log(\"Štampanje pokrenuto:\", data);\n      }).catch(error => {\n        console.error(\"Greška pri pokretanju štampe:\", error);\n      });\n\n      // Otvori Confirmation u novom tabu i zatvori trenutni\n      console.log(\"Otvaranje Confirmation tab-a\"); // Log 3: Pre otvaranja tab-a\n      const confirmationWindow = window.open(\"/confirmation\", \"_blank\");\n      if (confirmationWindow) {\n        console.log(\"Zatvaranje Checkout tab-a\"); // Log 4: Pre zatvaranja\n        window.close();\n      } else {\n        alert(\"Molimo dozvolite popup prozore da biste videli potvrdu.\");\n        navigate(\"/confirmation\");\n      }\n    }).catch(error => {\n      console.error(\"Greška pri slanju porudžbine:\", error);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"heading\",\n      children: \"Korpa\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Ime: \", name]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Broj slika: \", selectedImages.length]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Ukupna cena: \", total, \" EUR\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: selectedImages.map((img, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: img\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-4\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handlePayment(\"cash\"),\n        className: \"button bg-gray full-width\",\n        children: \"Plati gotovinom na pultu\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-4\",\n      children: /*#__PURE__*/_jsxDEV(PayPalScriptProvider, {\n        options: {\n          \"client-id\": \"Af6IBblLCyOierzsCuY4kCOlqwdh7tVFXCYiNfa9pWJ6X4O3Wx6g51ruM1XoJhk3qXguUhjkrAeGgkKT\",\n          currency: \"EUR\"\n        },\n        children: /*#__PURE__*/_jsxDEV(PayPalButtons, {\n          style: {\n            layout: \"horizontal\",\n            color: \"blue\",\n            shape: \"rect\",\n            label: \"pay\"\n          },\n          createOrder: async (data, actions) => {\n            console.log(\"Kreiranje PayPal porudžbine\"); // Log 5: Pre kreiranja\n            const response = await fetch(\"http://localhost:3001/api/paypal/create-order\", {\n              method: \"POST\",\n              headers: {\n                \"Content-Type\": \"application/json\"\n              },\n              body: JSON.stringify({\n                total\n              })\n            });\n            const orderData = await response.json();\n            console.log(\"PayPal porudžbina kreirana:\", orderData.id); // Log 6: Posle kreiranja\n            return orderData.id;\n          },\n          onApprove: async (data, actions) => {\n            console.log(\"Hvatanje PayPal plaćanja\"); // Log 7: Pre hvatanja\n            const response = await fetch(\"http://localhost:3001/api/paypal/capture-order\", {\n              method: \"POST\",\n              headers: {\n                \"Content-Type\": \"application/json\"\n              },\n              body: JSON.stringify({\n                orderID: data.orderID\n              })\n            });\n            const captureData = await response.json();\n            console.log(\"PayPal plaćanje uhvaćeno:\", captureData); // Log 8: Posle hvatanja\n            if (captureData.capture.status === \"COMPLETED\") {\n              handlePayment(\"paypal\", data.orderID);\n            } else {\n              alert(\"Plaćanje nije uspešno završeno.\");\n            }\n          },\n          onError: err => {\n            console.error(\"PayPal Error:\", err);\n            alert(\"Došlo je do greške prilikom plaćanja. Pokušajte ponovo.\");\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n};\n_s(Checkout, \"CzcTeTziyjMsSrAVmHuCCb6+Bfg=\", true);\n_c = Checkout;\nvar _c;\n$RefreshReg$(_c, \"Checkout\");","map":{"version":3,"names":["Checkout","selectedImages","name","_s","navigate","useNavigate","total","length","handlePayment","paymentMethod","orderID","alert","orderData","console","log","localStorage","setItem","JSON","stringify","fetch","method","headers","body","then","response","json","data","catch","error","confirmationWindow","window","open","close","_jsxDEV","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","img","index","onClick","PayPalScriptProvider","options","currency","PayPalButtons","style","layout","color","shape","label","createOrder","actions","id","onApprove","captureData","capture","status","onError","err","_c","$RefreshReg$"],"sources":["C:/Users/Marica/Pictures/galerija/src/App.js"],"sourcesContent":["const Checkout = ({ selectedImages, name }) => {\r\n  const navigate = useNavigate();\r\n  const total = selectedImages.length * 2;\r\n\r\n  const handlePayment = (paymentMethod, orderID = null) => {\r\n    if (!selectedImages.length) {\r\n      alert(\"Molimo vas da odaberete slike pre nego što nastavite.\");\r\n      return;\r\n    }\r\n\r\n    const orderData = { name, selectedImages, paymentMethod, orderID };\r\n    console.log(\"Slanje porudžbine:\", orderData); // Log 1: Podaci pre slanja\r\n\r\n    // Sačuvaj u localStorage za Confirmation stranicu\r\n    localStorage.setItem(\"orderData\", JSON.stringify(orderData));\r\n\r\n    // Pošalji porudžbinu na server\r\n    fetch(\"http://localhost:3001/api/order\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(orderData),\r\n    })\r\n    .then((response) => {\r\n      console.log(\"Odgovor od /api/order:\", response); // Log 2: Provera odgovora\r\n      return response.json();\r\n    })\r\n    .then((data) => {\r\n      console.log(\"Porudžbina poslata:\", data);\r\n\r\n      // Pokreni štampu\r\n      fetch(\"http://localhost:3001/api/print\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify(orderData),\r\n      })\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        console.log(\"Štampanje pokrenuto:\", data);\r\n      })\r\n      .catch(error => {\r\n        console.error(\"Greška pri pokretanju štampe:\", error);\r\n      });\r\n\r\n      // Otvori Confirmation u novom tabu i zatvori trenutni\r\n      console.log(\"Otvaranje Confirmation tab-a\"); // Log 3: Pre otvaranja tab-a\r\n      const confirmationWindow = window.open(\"/confirmation\", \"_blank\");\r\n      if (confirmationWindow) {\r\n        console.log(\"Zatvaranje Checkout tab-a\"); // Log 4: Pre zatvaranja\r\n        window.close();\r\n      } else {\r\n        alert(\"Molimo dozvolite popup prozore da biste videli potvrdu.\");\r\n        navigate(\"/confirmation\");\r\n      }\r\n    })\r\n    .catch((error) => {\r\n      console.error(\"Greška pri slanju porudžbine:\", error);\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <h2 className=\"heading\">Korpa</h2>\r\n      <h2>Ime: {name}</h2>\r\n      <h2>Broj slika: {selectedImages.length}</h2>\r\n      <h2>Ukupna cena: {total} EUR</h2>\r\n      <ul>\r\n        {selectedImages.map((img, index) => (\r\n          <li key={index}>{img}</li>\r\n        ))}\r\n      </ul>\r\n\r\n      <div className=\"mt-4\">\r\n        <button onClick={() => handlePayment(\"cash\")} className=\"button bg-gray full-width\">\r\n          Plati gotovinom na pultu\r\n        </button>\r\n      </div>\r\n      <div className=\"mt-4\">\r\n        <PayPalScriptProvider options={{ \"client-id\": \"Af6IBblLCyOierzsCuY4kCOlqwdh7tVFXCYiNfa9pWJ6X4O3Wx6g51ruM1XoJhk3qXguUhjkrAeGgkKT\", currency: \"EUR\" }}>\r\n          <PayPalButtons\r\n            style={{ layout: \"horizontal\", color: \"blue\", shape: \"rect\", label: \"pay\" }}\r\n            createOrder={async (data, actions) => {\r\n              console.log(\"Kreiranje PayPal porudžbine\"); // Log 5: Pre kreiranja\r\n              const response = await fetch(\"http://localhost:3001/api/paypal/create-order\", {\r\n                method: \"POST\",\r\n                headers: {\r\n                  \"Content-Type\": \"application/json\",\r\n                },\r\n                body: JSON.stringify({ total }),\r\n              });\r\n              const orderData = await response.json();\r\n              console.log(\"PayPal porudžbina kreirana:\", orderData.id); // Log 6: Posle kreiranja\r\n              return orderData.id;\r\n            }}\r\n            onApprove={async (data, actions) => {\r\n              console.log(\"Hvatanje PayPal plaćanja\"); // Log 7: Pre hvatanja\r\n              const response = await fetch(\"http://localhost:3001/api/paypal/capture-order\", {\r\n                method: \"POST\",\r\n                headers: {\r\n                  \"Content-Type\": \"application/json\",\r\n                },\r\n                body: JSON.stringify({ orderID: data.orderID }),\r\n              });\r\n              const captureData = await response.json();\r\n              console.log(\"PayPal plaćanje uhvaćeno:\", captureData); // Log 8: Posle hvatanja\r\n              if (captureData.capture.status === \"COMPLETED\") {\r\n                handlePayment(\"paypal\", data.orderID);\r\n              } else {\r\n                alert(\"Plaćanje nije uspešno završeno.\");\r\n              }\r\n            }}\r\n            onError={(err) => {\r\n              console.error(\"PayPal Error:\", err);\r\n              alert(\"Došlo je do greške prilikom plaćanja. Pokušajte ponovo.\");\r\n            }}\r\n          />\r\n        </PayPalScriptProvider>\r\n      </div>\r\n    </div>\r\n  );\r\n};"],"mappings":";;;AAAA,MAAMA,QAAQ,GAAGA,CAAC;EAAEC,cAAc;EAAEC;AAAK,CAAC,KAAK;EAAAC,EAAA;EAC7C,MAAMC,QAAQ,GAAGC,WAAW,CAAC,CAAC;EAC9B,MAAMC,KAAK,GAAGL,cAAc,CAACM,MAAM,GAAG,CAAC;EAEvC,MAAMC,aAAa,GAAGA,CAACC,aAAa,EAAEC,OAAO,GAAG,IAAI,KAAK;IACvD,IAAI,CAACT,cAAc,CAACM,MAAM,EAAE;MAC1BI,KAAK,CAAC,uDAAuD,CAAC;MAC9D;IACF;IAEA,MAAMC,SAAS,GAAG;MAAEV,IAAI;MAAED,cAAc;MAAEQ,aAAa;MAAEC;IAAQ,CAAC;IAClEG,OAAO,CAACC,GAAG,CAAC,oBAAoB,EAAEF,SAAS,CAAC,CAAC,CAAC;;IAE9C;IACAG,YAAY,CAACC,OAAO,CAAC,WAAW,EAAEC,IAAI,CAACC,SAAS,CAACN,SAAS,CAAC,CAAC;;IAE5D;IACAO,KAAK,CAAC,iCAAiC,EAAE;MACvCC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEL,IAAI,CAACC,SAAS,CAACN,SAAS;IAChC,CAAC,CAAC,CACDW,IAAI,CAAEC,QAAQ,IAAK;MAClBX,OAAO,CAACC,GAAG,CAAC,wBAAwB,EAAEU,QAAQ,CAAC,CAAC,CAAC;MACjD,OAAOA,QAAQ,CAACC,IAAI,CAAC,CAAC;IACxB,CAAC,CAAC,CACDF,IAAI,CAAEG,IAAI,IAAK;MACdb,OAAO,CAACC,GAAG,CAAC,qBAAqB,EAAEY,IAAI,CAAC;;MAExC;MACAP,KAAK,CAAC,iCAAiC,EAAE;QACvCC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDC,IAAI,EAAEL,IAAI,CAACC,SAAS,CAACN,SAAS;MAChC,CAAC,CAAC,CACDW,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACG,IAAI,IAAI;QACZb,OAAO,CAACC,GAAG,CAAC,sBAAsB,EAAEY,IAAI,CAAC;MAC3C,CAAC,CAAC,CACDC,KAAK,CAACC,KAAK,IAAI;QACdf,OAAO,CAACe,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;MACvD,CAAC,CAAC;;MAEF;MACAf,OAAO,CAACC,GAAG,CAAC,8BAA8B,CAAC,CAAC,CAAC;MAC7C,MAAMe,kBAAkB,GAAGC,MAAM,CAACC,IAAI,CAAC,eAAe,EAAE,QAAQ,CAAC;MACjE,IAAIF,kBAAkB,EAAE;QACtBhB,OAAO,CAACC,GAAG,CAAC,2BAA2B,CAAC,CAAC,CAAC;QAC1CgB,MAAM,CAACE,KAAK,CAAC,CAAC;MAChB,CAAC,MAAM;QACLrB,KAAK,CAAC,yDAAyD,CAAC;QAChEP,QAAQ,CAAC,eAAe,CAAC;MAC3B;IACF,CAAC,CAAC,CACDuB,KAAK,CAAEC,KAAK,IAAK;MAChBf,OAAO,CAACe,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;IACvD,CAAC,CAAC;EACJ,CAAC;EAED,oBACEK,OAAA;IAAKC,SAAS,EAAC,WAAW;IAAAC,QAAA,gBACxBF,OAAA;MAAIC,SAAS,EAAC,SAAS;MAAAC,QAAA,EAAC;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAClCN,OAAA;MAAAE,QAAA,GAAI,OAAK,EAACjC,IAAI;IAAA;MAAAkC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACpBN,OAAA;MAAAE,QAAA,GAAI,cAAY,EAAClC,cAAc,CAACM,MAAM;IAAA;MAAA6B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAC5CN,OAAA;MAAAE,QAAA,GAAI,eAAa,EAAC7B,KAAK,EAAC,MAAI;IAAA;MAAA8B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACjCN,OAAA;MAAAE,QAAA,EACGlC,cAAc,CAACuC,GAAG,CAAC,CAACC,GAAG,EAAEC,KAAK,kBAC7BT,OAAA;QAAAE,QAAA,EAAiBM;MAAG,GAAXC,KAAK;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAW,CAC1B;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC,eAELN,OAAA;MAAKC,SAAS,EAAC,MAAM;MAAAC,QAAA,eACnBF,OAAA;QAAQU,OAAO,EAAEA,CAAA,KAAMnC,aAAa,CAAC,MAAM,CAAE;QAAC0B,SAAS,EAAC,2BAA2B;QAAAC,QAAA,EAAC;MAEpF;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC,eACNN,OAAA;MAAKC,SAAS,EAAC,MAAM;MAAAC,QAAA,eACnBF,OAAA,CAACW,oBAAoB;QAACC,OAAO,EAAE;UAAE,WAAW,EAAE,kFAAkF;UAAEC,QAAQ,EAAE;QAAM,CAAE;QAAAX,QAAA,eAClJF,OAAA,CAACc,aAAa;UACZC,KAAK,EAAE;YAAEC,MAAM,EAAE,YAAY;YAAEC,KAAK,EAAE,MAAM;YAAEC,KAAK,EAAE,MAAM;YAAEC,KAAK,EAAE;UAAM,CAAE;UAC5EC,WAAW,EAAE,MAAAA,CAAO3B,IAAI,EAAE4B,OAAO,KAAK;YACpCzC,OAAO,CAACC,GAAG,CAAC,6BAA6B,CAAC,CAAC,CAAC;YAC5C,MAAMU,QAAQ,GAAG,MAAML,KAAK,CAAC,+CAA+C,EAAE;cAC5EC,MAAM,EAAE,MAAM;cACdC,OAAO,EAAE;gBACP,cAAc,EAAE;cAClB,CAAC;cACDC,IAAI,EAAEL,IAAI,CAACC,SAAS,CAAC;gBAAEZ;cAAM,CAAC;YAChC,CAAC,CAAC;YACF,MAAMM,SAAS,GAAG,MAAMY,QAAQ,CAACC,IAAI,CAAC,CAAC;YACvCZ,OAAO,CAACC,GAAG,CAAC,6BAA6B,EAAEF,SAAS,CAAC2C,EAAE,CAAC,CAAC,CAAC;YAC1D,OAAO3C,SAAS,CAAC2C,EAAE;UACrB,CAAE;UACFC,SAAS,EAAE,MAAAA,CAAO9B,IAAI,EAAE4B,OAAO,KAAK;YAClCzC,OAAO,CAACC,GAAG,CAAC,0BAA0B,CAAC,CAAC,CAAC;YACzC,MAAMU,QAAQ,GAAG,MAAML,KAAK,CAAC,gDAAgD,EAAE;cAC7EC,MAAM,EAAE,MAAM;cACdC,OAAO,EAAE;gBACP,cAAc,EAAE;cAClB,CAAC;cACDC,IAAI,EAAEL,IAAI,CAACC,SAAS,CAAC;gBAAER,OAAO,EAAEgB,IAAI,CAAChB;cAAQ,CAAC;YAChD,CAAC,CAAC;YACF,MAAM+C,WAAW,GAAG,MAAMjC,QAAQ,CAACC,IAAI,CAAC,CAAC;YACzCZ,OAAO,CAACC,GAAG,CAAC,2BAA2B,EAAE2C,WAAW,CAAC,CAAC,CAAC;YACvD,IAAIA,WAAW,CAACC,OAAO,CAACC,MAAM,KAAK,WAAW,EAAE;cAC9CnD,aAAa,CAAC,QAAQ,EAAEkB,IAAI,CAAChB,OAAO,CAAC;YACvC,CAAC,MAAM;cACLC,KAAK,CAAC,iCAAiC,CAAC;YAC1C;UACF,CAAE;UACFiD,OAAO,EAAGC,GAAG,IAAK;YAChBhD,OAAO,CAACe,KAAK,CAAC,eAAe,EAAEiC,GAAG,CAAC;YACnClD,KAAK,CAAC,yDAAyD,CAAC;UAClE;QAAE;UAAAyB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACkB;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpB,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACpC,EAAA,CA3HIH,QAAQ;AAAA8D,EAAA,GAAR9D,QAAQ;AAAA,IAAA8D,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}